{"version":3,"sources":["components/Contacts/ContactList.module.css","components/ContactsForm/ContactsForm.module.css","components/Filter/Filter.module.css","components/ErrorName/ErrorName.module.css","components/App/App.module.css","components/ContactsForm/ContactsForm.js","components/Contacts/Contact.js","components/Contacts/ContactList.js","components/Filter/Filter.js","components/ErrorName/ErrorName.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","ContactsForm","state","name","number","onChangeName","e","preventDefault","setState","target","value","onChangeNumber","onPushContact","console","log","props","handlePushContact","this","className","styles","container","onSubmit","title","input","type","onChange","button","Component","Contact","onHandleDelete","parentNode","closest","getAttribute","handleDeleteContact","id","listItem","text","onClick","ContactList","prevProps","prevState","localStorage","setItem","JSON","stringify","contacts","filter","contact","toLowerCase","includes","TransitionGroup","component","list","map","CSSTransition","timeout","classNames","unmountOnExit","Filter","onFilterChange","handleGetFilter","ErrorName","App","uuidv4","error","delContacts","delContacts2","index","indexOf","splice","handleDelayError","setTimeout","parse","getItem","in","onEntered","appear","handleGetName","handleGetNumber","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.61380872.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1YsGx\",\"listItem\":\"ContactList_listItem__uoPOO\",\"text\":\"ContactList_text__2I796\",\"button\":\"ContactList_button__2PWEC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsForm_container__2E2dv\",\"title\":\"ContactsForm_title__35QhL\",\"input\":\"ContactsForm_input__1JNCG\",\"button\":\"ContactsForm_button__3EsGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1vCtI\",\"input\":\"Filter_input__2-u2o\",\"text\":\"Filter_text__2Tp2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ErrorName_container__1oCC5\",\"text\":\"ErrorName_text__2ed_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__NLdIm\"};","import React, {Component} from 'react';\r\nimport styles from './ContactsForm.module.css';\r\n\r\nclass ContactsForm extends Component{\r\n    state={\r\n        name: \"\",\r\n        number: \"\",\r\n    }\r\n    onChangeName = (e) => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            name: e.target.value,\r\n          })\r\n    }\r\n    onChangeNumber = (e) => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            number: e.target.value,\r\n          })\r\n    }\r\n    onPushContact = (e) => {\r\n        e.preventDefault()\r\n        console.log(e.target)\r\n        this.props.handlePushContact(this.state.name, this.state.number)\r\n    }\r\n    render(){\r\n        const name=this.props.name\r\n        const number=this.props.number\r\n        return(\r\n            <div className={styles.container}>\r\n                <form onSubmit={this.onPushContact}>\r\n                    <p className={styles.title}>Name</p>\r\n                    <input className={styles.input} name=\"name\" type=\"text\" value={name} onChange={this.onChangeName}></input>\r\n                    <p className={styles.title}>Number</p>\r\n                    <input className={styles.input} name=\"number\" type=\"text\" value={number} onChange={this.onChangeNumber}></input><br></br>\r\n                    <button className={styles.button} type=\"submit\">Add contact</button>\r\n                </form>\r\n            </div>        \r\n            )\r\n    }\r\n}\r\n\r\nexport default ContactsForm;","import React, {Component} from 'react';\r\nimport styles from './ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Contact extends Component{\r\n    onHandleDelete = (e) => {\r\n        e.preventDefault()\r\n        console.log(e.target.parentNode.closest('li').getAttribute(\"id\"))\r\n        this.props.handleDeleteContact(e.target.parentNode.closest('li').getAttribute(\"id\"))\r\n    }\r\n    render(){\r\n    return(\r\n        <li id={this.props.id} className={styles.listItem}>\r\n            <p className={styles.text}>{this.props.name}</p> \r\n            <p className={styles.text}>{this.props.number}</p>\r\n            <button onClick={this.onHandleDelete} className={styles.button}>&#10006;</button>\r\n        </li>\r\n    )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    handleDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport Contact from './Contact';\r\nimport styles from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport './ContactListAnimations.css';\r\n\r\nclass ContactList extends Component{\r\n    componentDidUpdate(prevProps, prevState){\r\n        localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts))\r\n    }\r\n    render(){\r\n        const contacts = this.props.contacts.filter(contact=>contact.name.toLowerCase().includes(this.props.filter.toLowerCase()));\r\n        return(\r\n            <div>\r\n                <TransitionGroup component=\"ul\" className={styles.list}>        \r\n                    {contacts.map(contact=>(\r\n                        <CSSTransition key={contact.id} timeout={250} classNames=\"list-contact\" unmountOnExit>\r\n                        <Contact \r\n                        name={contact.name}\r\n                        number={contact.number}\r\n                        id={contact.id}\r\n                        handleDeleteContact={this.props.handleDeleteContact}\r\n                         />\r\n                         </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.exact({\r\n        name: PropTypes.string,\r\n        number: PropTypes.string,\r\n        id: PropTypes.string,\r\n    })).isRequired,\r\n    handleDeleteContact: PropTypes.func.isRequired,\r\n}\r\nexport default ContactList;","import React, {Component} from 'react';\r\nimport styles from './Filter.module.css';\r\n\r\nclass Filter extends Component{\r\n    onFilterChange = (e) => {\r\n        e.preventDefault()\r\n        this.props.handleGetFilter(e.target.value)\r\n    }\r\n    render(){\r\n        const filter=this.props.filter;\r\n        return(\r\n            <div className={styles.container}>\r\n                <p className={styles.text}>Find contacts by name</p>\r\n                <input className={styles.input} type=\"text\" value={filter} onChange={this.onFilterChange}></input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport styles from './ErrorName.module.css';\r\n\r\nconst ErrorName = () =>{\r\n   return( \r\n   <div className={styles.container}>\r\n        <p className={styles.text}>Contact already exist</p>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default ErrorName;","import React, { Component } from \"react\";\nimport ContactsForm from \"../ContactsForm/ContactsForm\";\nimport Contacts from \"../Contacts/ContactList\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Filter from \"../Filter/Filter\";\nimport styles from \"./App.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./AppAnimations.css\";\nimport ErrorName from '../ErrorName/ErrorName';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {\n        name: \"Roise Simpson\",\n        number: \"645-17-49\",\n        id: uuidv4(),\n      },\n      {\n        name: \"Hermione Kline\",\n        number: \"443-89-12\",\n        id: uuidv4(),\n      },\n      {\n        name: \"Eden Clements\",\n        number: \"459-12-56\",\n        id: uuidv4(),\n      },\n    ],\n    filter: \"\",\n    error: false,\n  };\n  handleGetFilter = (filter) => {\n    this.setState({\n      filter: filter,\n    });\n  };\n  componentDidMount(prevState, prevProps) {\n    if (localStorage.contacts) {\n      this.setState({\n        contacts: JSON.parse(localStorage.getItem(\"contacts\")),\n      });\n    }\n  }\n  handleDeleteContact = (id) => {\n    let delContacts = this.state.contacts.map((contact) => contact.id);\n    let delContacts2 = [...this.state.contacts];\n    let index = delContacts.indexOf(id);\n    delContacts2.splice(index, 1);\n    this.setState({\n      contacts: [...delContacts2],\n    });\n  };\n  handlePushContact = (name, number) => {\n    let thisArr = this.state.contacts.map((contact) =>\n      contact.name.toLowerCase()\n    );\n    if (!thisArr.includes(name.toLowerCase())) {\n      this.setState((prevState) => ({\n        contacts: [\n          ...prevState.contacts,\n          { name: name, number: number, id: uuidv4() },\n        ],\n      }));\n    } else {\n      // alert(`${name} is already in contacts.`);\n      this.setState({error: true});\n      // setTimeout(this.setState({error: false}), 10450);\n    }\n  };\n  handleDelayError = () =>{\n    setTimeout(()=>this.setState({error: false}), 1000);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <CSSTransition in={this.state.error} timeout={250} onEntered={this.handleDelayError} classNames=\"error\" unmountOnExit>\n        <ErrorName />\n        </CSSTransition>\n\n        <CSSTransition in={true} appear={true} timeout={500} classNames=\"main-title\">\n          <h2 className={styles.title}>Phonebook</h2>\n        </CSSTransition>\n\n        <ContactsForm\n          name={this.state.name}\n          number={this.state.number}\n          handleGetName={this.handleGetName}\n          handleGetNumber={this.handleGetNumber}\n          handlePushContact={this.handlePushContact}\n        />\n        <CSSTransition in={this.state.contacts.length>1} timeout={500} classNames=\"filter\" unmountOnExit>\n        <Filter\n          filter={this.state.filter}\n          handleGetFilter={this.handleGetFilter}\n        />\n        </CSSTransition>\n        <Contacts\n          contacts={this.state.contacts}\n          filter={this.state.filter}\n          handleDeleteContact={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}